<Window x:Class="TeslaRevitTools.ITwoExport.iTwoExportWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TeslaRevitTools.ITwoExport"
        mc:Ignorable="d"
        WindowStartupLocation="CenterOwner"
        Title="iTwoExportWindow" Height="600" Width="1200">
    <Grid Margin="5">
        <TabControl>
            <TabItem Header="Elements" TabIndex="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <GroupBox BorderBrush="DarkGray">
                        <GroupBox.Header>
                            Exported Elements
                         </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Label Content="View Filter:" FontSize="10" VerticalAlignment="Center"></Label>
                            <TextBox x:Name="ElementsSearchBox" FontSize="10" VerticalContentAlignment="Center" Margin="70,5,5,5" TextChanged="ElementsSearchBox_TextChanged"></TextBox>
                            <DataGrid x:Name="MainDataGrid" Grid.Row="1" ItemsSource="{Binding ExportedElements, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CanUserAddRows="False" AutoGenerateColumns="False" Margin="5" HeadersVisibility="Column" BeginningEdit="MainDataGrid_BeginningEdit" CellEditEnding="MainDataGrid_CellEditEnding" FontSize="10">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Element Id"  Binding="{Binding InstanceId}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Category Name" Binding="{Binding CategoryName}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Type Name" Width="120" Binding="{Binding InstanceType.Name}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Length" Binding="{Binding Length, StringFormat=F3}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Area" Binding="{Binding Area, StringFormat=F3}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Volume" Binding="{Binding Volume, StringFormat=F3}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Keynote" Binding="{Binding Keynote, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="KeynoteStatus" Binding="{Binding KeynoteStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="*">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="Empty">
                                                        <Setter Property="Background" Value="LightGray"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="IncorrectFormat">
                                                        <Setter Property="Background" Value="LightPink"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="OK">
                                                        <Setter Property="Background" Value="LightGreen"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="NotListed">
                                                        <Setter Property="Background" Value="LightYellow"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Load/Reload elements" Click="MenuItemClick_RefreshDataContext"></MenuItem>
                                        <MenuItem Header="Check keynotes" Click="MenuItemClick_CheckKeynotes"></MenuItem>
                                        <MenuItem Header="Generate preview" Click="MenuItemClick_SetPreview"></MenuItem>
                                        <MenuItem Header="Select in Model" Click="MenuItemClick_SelectInModel"></MenuItem>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                        </Grid>
                    </GroupBox>
                    <GroupBox Grid.Column="2" BorderBrush="DarkGray">
                        <GroupBox.Header>
                            Export Preview
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="120"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <!--/PreviewGridModel.PreviewItems
                                PreviewGridModel.ColumnData = List<ColumnInfo>();
                                ColumnInfo.IsHidden
                                ColumnInfo.HeaderName/-->
                            <DataGrid x:Name="PreviewDataGrid" Margin="5" ColumnReordered="PreviewDataGrid_ColumnReordered" ItemsSource="{Binding PreviewItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="10" AutoGenerateColumns="False" CanUserAddRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Width="*" Header="Type Name" Binding="{Binding TypeName}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Description" Binding="{Binding Description}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="KeyNotes" Binding="{Binding Keynote}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="DIN" Binding="{Binding Din}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="RN" Binding="{Binding Rn}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Short Info" Binding="{Binding ShortInfo}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Outl. Spec." Binding="{Binding OutlineSpec}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Quantity" Binding="{Binding Quantity}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="UoM" Binding="{Binding Unit}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Unit Rate" Binding="{Binding UnitRate}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Total Amount" Binding="{Binding TotalAmount}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Specification" Binding="{Binding Specification}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Length" Binding="{Binding Length, StringFormat=F3}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Area" Binding="{Binding Area}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Volume" Binding="{Binding Volume, StringFormat=F2}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Count" Binding="{Binding Count}" IsReadOnly="True"></DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Export as excel file" Click="MenuItemClick_SaveExcel"></MenuItem>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                            <ListBox x:Name="PreviewColumnsListBox" Grid.Column="1" ItemsSource="{Binding ElementsPreviewColumns}" Margin="5,5,5,30">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox x:Name="ElementColumns" IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Unchecked="PreviewColumnUnchecked" Checked="PreviewColumnChecked" Content="{Binding HeaderName}"></CheckBox>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Button Content="Save config" VerticalAlignment="Bottom" Grid.Column="1" Margin="5" Click="BtnClick_SaveNewConfig"></Button>
                        </Grid>
                    </GroupBox>
                    <GridSplitter Grid.Column="1" Width="1" Background="Gray" VerticalAlignment="Stretch" HorizontalAlignment="Center" />

                </Grid>
            </TabItem>
            <TabItem Header="Materials">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <GroupBox BorderBrush="DarkGray">
                        <GroupBox.Header>
                            Exported Materials
                        </GroupBox.Header>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Label Content="View Filter:" FontSize="10" VerticalAlignment="Center"></Label>
                            <TextBox x:Name="MaterialsSearchBox" FontSize="10" VerticalContentAlignment="Center" Margin="70,5,5,5" TextChanged="MaterialsSearchBox_TextChanged"></TextBox>
                            <DataGrid x:Name="MaterialsDataGrid" Grid.Row="1" ItemsSource="{Binding ExportedMaterials, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CanUserAddRows="False" AutoGenerateColumns="False" Margin="5" HeadersVisibility="Column" BeginningEdit="MainDataGrid_BeginningEdit" CellEditEnding="MainDataGrid_CellEditEnding" FontSize="10">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="ElementId"  Binding="{Binding InstanceId}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Mat. Id"  Binding="{Binding Material.Id}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Mat.Name" Width="70" Binding="{Binding Material.Name}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Category" Binding="{Binding CategoryName}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="IsPaint" Width="45" Binding="{Binding IsPaint}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Area" Binding="{Binding Area, StringFormat=F2}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Volume" Binding="{Binding Volume, StringFormat=F2}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Keynote" Binding="{Binding Keynote, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="KeynoteStatus" Binding="{Binding KeynoteStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" Width="*">
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="Empty">
                                                        <Setter Property="Background" Value="LightGray"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="IncorrectFormat">
                                                        <Setter Property="Background" Value="LightPink"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="OK">
                                                        <Setter Property="Background" Value="LightGreen"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="NotListed">
                                                        <Setter Property="Background" Value="LightYellow"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Load/Reload materials" Click="MenuItemClick_LoadMaterials"></MenuItem>
                                        <MenuItem Header="Check keynotes" Click="MenuItemClick_CheckKeynotes"></MenuItem>
                                        <MenuItem Header="Generate preview" Click="MenuItemClick_GenerateMaterialsPreview"></MenuItem>
                                        <MenuItem Header="Select Element" Click="MenuItemClick_SelectElementContaining"></MenuItem>
                                        <MenuItem Header="Select Material" Click="MenuItemClick_SelectMaterial"></MenuItem>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                        </Grid>
                    </GroupBox>
                    <GridSplitter Grid.Column="1" Width="1" Background="Gray" VerticalAlignment="Stretch" HorizontalAlignment="Center" />
                    <GroupBox Grid.Column="2" BorderBrush="DarkGray">
                        <GroupBox.Header>
                            Export Preview
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="125" ></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <DataGrid x:Name="MaterialsPreviewDataGrid" Margin="5" ColumnReordered="PreviewDataGrid_ColumnReordered" ItemsSource="{Binding PreviewMaterials, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="10" AutoGenerateColumns="False" CanUserAddRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Width="*" Header="Material Name" Binding="{Binding MaterialName}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Description" Binding="{Binding Description}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="KeyNotes" Binding="{Binding Keynote}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="RN" Binding="{Binding Rn}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Short Info" Binding="{Binding ShortInfo}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Outl. Spec." Binding="{Binding OutlineSpec}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Quantity" Binding="{Binding Quantity}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="35" Header="UoM" Binding="{Binding Unit}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Unit Rate" Binding="{Binding UnitRate}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Total Amount" Binding="{Binding TotalAmount}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Specification" Binding="{Binding Specification}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Area" Binding="{Binding Area}" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Width="*" Header="Volume" Binding="{Binding Volume}" IsReadOnly="True"></DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Export as excel file" Click="MenuItemClick_SaveMaterialsToExcel"></MenuItem>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                            </DataGrid>
                            <ListBox x:Name="MaterialPreviewColumns" Grid.Column="1" ItemsSource="{Binding MaterialsPreviewColumns}" Margin="5,5,5,30">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox x:Name="MaterialColumns" IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Unchecked="PreviewColumnUnchecked" Checked="PreviewColumnChecked" Content="{Binding HeaderName}"></CheckBox>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Button Content="Save config" VerticalAlignment="Bottom" Grid.Column="1" Margin="5" Click="BtnClick_SaveNewConfig"></Button>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Settings" TabIndex="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <GroupBox Margin="5" BorderBrush="DarkGray" Grid.RowSpan="2">
                        <GroupBox.Header>
                            Excel Keynotes
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="110"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <DataGrid x:Name="ExcelDataGrid" ItemsSource="{Binding ExcelKeynotes}" IsReadOnly="True" Margin="5" FontSize="10" AutoGenerateColumns="False" CanUserAddRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Keynote" Binding="{Binding Index0}" Width="90"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Type Name" Binding="{Binding Index1}" Width="100"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Parent Cat." Binding="{Binding Index2}" Width="60"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Unit" Binding="{Binding Index3}" Width="40"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Tender Text (Eng.)" Binding="{Binding Index4}" Width="*"></DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button Content="Load excel file" Grid.Column="1" VerticalAlignment="Top" Margin="5" Click="BtnClick_LoadExcel"></Button>
                            <Button Content="Append new file" Grid.Column="1" VerticalAlignment="Top" Margin="5,30,5,5" Click="BtnClick_AppendExcel"></Button>
                            <Button Content="Save data" Grid.Column="1" VerticalAlignment="Top" Margin="5,55,5,5" Click="BtnClick_SaveExcelData"></Button>
                            <Label Grid.Column="1" Margin="5,75,5,5" Content="- Sheet: 'Keynotes'" FontSize="8" VerticalAlignment="Top"></Label>
                            <Label Grid.Column="1" Margin="5,90,5,5" Content="- Cells: 'Values only'" FontSize="8" VerticalAlignment="Top"></Label>

                        </Grid>
                    </GroupBox>
                    <GroupBox Margin="5" BorderBrush="DarkGray" Grid.Column="1" Grid.RowSpan="2">
                        <GroupBox.Header>
                            Exported Categories and Options
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="110"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <DataGrid x:Name="CategoriesDataGrid" ItemsSource="{Binding RevitCategories, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" CanUserAddRows="False" AutoGenerateColumns="False" Margin="5,5,5,50">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.Header>
                                            <CheckBox x:Name="HeaderCheckbox" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"></CheckBox>
                                        </DataGridTemplateColumn.Header>
                                        <DataGridTemplateColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridTemplateColumn.HeaderStyle>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" Checked="CheckBox_Checked_1" Unchecked="CheckBox_Unchecked_1" PreviewMouseLeftButtonDown="CheckBox_PreviewMouseLeftButtonDown"></CheckBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Category Name" Binding="{Binding Name}" Width="*" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="BuiltInCategory" Binding="{Binding BuiltInCategory}" Width="*" IsReadOnly="True"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Density [kg/m3]" Binding="{Binding Density, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=F1}" Width="*"></DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <CheckBox x:Name="ExportActiveViewChBox" IsChecked="{Binding ActiveViewOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,5,5,25" Content="Export Active View Only" VerticalAlignment="Bottom"></CheckBox>
                            <CheckBox x:Name="IncludePaintMaterialsChBox" IsChecked="{Binding IncludePaintMaterials, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,5,5,5" Content="Include Paint Materials" VerticalAlignment="Bottom"></CheckBox>

                            <Button Content="Save" Grid.Column="1" Margin="5" VerticalAlignment="Top" Click="BtnClick_SaveSelectedCategories"></Button>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
